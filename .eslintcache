[{"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\index.js":"1","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\reportWebVitals.js":"2","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\App.js":"3","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\1.js":"4","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day1.js":"5","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day2.js":"6","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\_utils\\fetch.js":"7","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day3.js":"8","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\2.js":"9","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\3.js":"10","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day4.js":"11","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\4.js":"12","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\5.js":"13","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day5.js":"14","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day7.js":"15","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\8.js":"16","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day8.js":"17","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\6.js":"18","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day6.js":"19","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\9.js":"20","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\9test.js":"21","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day9.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2405,"mtime":1607515544262,"results":"26","hashOfConfig":"24"},{"size":1213,"mtime":1606826819688,"results":"27","hashOfConfig":"24"},{"size":1012,"mtime":1607021845504,"results":"28","hashOfConfig":"24"},{"size":1052,"mtime":1607022620649,"results":"29","hashOfConfig":"24"},{"size":209,"mtime":1607012123846,"results":"30","hashOfConfig":"24"},{"size":1199,"mtime":1607030819139,"results":"31","hashOfConfig":"24"},{"size":24888,"mtime":1607022415936,"results":"32","hashOfConfig":"24"},{"size":11652,"mtime":1607022911638,"results":"33","hashOfConfig":"24"},{"size":2300,"mtime":1607085746658,"results":"34","hashOfConfig":"24"},{"size":24687,"mtime":1607081988367,"results":"35","hashOfConfig":"24"},{"size":14650,"mtime":1607150719395,"results":"36","hashOfConfig":"24"},{"size":751,"mtime":1607195232656,"results":"37","hashOfConfig":"24"},{"size":1517,"mtime":1607336561744,"results":"38","hashOfConfig":"24"},{"size":7446,"mtime":1607459585847,"results":"39","hashOfConfig":"24"},{"size":1829,"mtime":1607464138817,"results":"40","hashOfConfig":"24"},{"size":25751,"mtime":1607465339056,"results":"41","hashOfConfig":"24"},{"size":1801,"mtime":1607515285725,"results":"42","hashOfConfig":"24"},{"size":10848,"mtime":1607515530547,"results":"43","hashOfConfig":"24"},{"size":138,"mtime":1607515949643,"results":"44","hashOfConfig":"24"},{"size":1662,"mtime":1607949973868,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"9lx4eo",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\index.js",[],["93","94"],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\reportWebVitals.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\App.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\1.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day1.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day2.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\_utils\\fetch.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day3.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\2.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\3.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day4.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\4.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\5.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day5.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day7.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\8.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day8.js",["95"],"import {inputDay8} from \"../data/8.js\";\r\n\r\nconst inputToMap = (input) => {\r\n    return input.map((line) => {\r\n        const map = {};\r\n        const [instruction, value] = line.split(\" \");\r\n        return Object.assign(map, {instruction, value})\r\n    });\r\n}\r\n\r\nconst accValue = (map) => {\r\n    let accumulator = 0;\r\n    let currentIndex = 0;\r\n    let beenThere = [];\r\n\r\n    while (!beenThere.includes(currentIndex)) {\r\n        beenThere.push(currentIndex);\r\n        if (map[currentIndex] === undefined) {\r\n            return {accumulator, currentIndex};\r\n        }\r\n        const {instruction, value} = map[currentIndex];\r\n        switch (instruction) {\r\n            case \"acc\":\r\n                accumulator += +value;\r\n                currentIndex += 1;\r\n                break;\r\n\r\n            case \"jmp\":\r\n                currentIndex += +value;\r\n                break;\r\n\r\n            default:\r\n                currentIndex++;\r\n                break;\r\n        }\r\n    }\r\n    return {accumulator, currentIndex};\r\n}\r\n\r\nconst bootFix = (map) => {\r\n    let accumulator = 0;\r\n    map.map(({instruction, value}, index) => {\r\n        if (instruction === 'acc') {\r\n            return index;\r\n        }\r\n        if (['nop', 'jmp'].includes(instruction)) {\r\n            let modifiedMap = [...map];\r\n            modifiedMap.splice(index, 1, {instruction: `${instruction === 'nop' ? 'jmp' : 'nop'}`, value});\r\n            let testModifiedMap = accValue(modifiedMap);\r\n            if (testModifiedMap.currentIndex === modifiedMap.length) {\r\n                accumulator = testModifiedMap.accumulator\r\n                return accumulator\r\n            }\r\n        }\r\n    })\r\n    return accumulator\r\n}\r\n\r\nexport const resultDay8Part1 = accValue(inputToMap(inputDay8)).accumulator;\r\n\r\nexport const resultDay8Part2 = bootFix(inputToMap(inputDay8));\r\n","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\6.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day6.js",["96"],"import {inputDay6} from \"../data/6.js\";\r\n\r\nconst countUniqueChars = (str1) => {\r\n    let str = str1.split(\"\");\r\n    let uniql = [];\r\n    str.map((letter, index) => {\r\n            if (!uniql.includes(letter)) {\r\n                uniql.push(letter);\r\n            }\r\n        }\r\n    )\r\n    return uniql\r\n}\r\n\r\nconst allGroups = (input) => {\r\n    let allGroups = [];\r\n    let group = \"\";\r\n    let groupSize = 0;\r\n    input.map((row, index) => {\r\n        if (row !== \"\") {\r\n            groupSize++;\r\n            group = group.concat(row)\r\n            if (index + 1 === input.length) {\r\n                allGroups.push({group, groupSize});\r\n            }\r\n            return group;\r\n        }\r\n        allGroups.push({group, groupSize});\r\n        groupSize = 0;\r\n        group = \"\";\r\n        return allGroups;\r\n    })\r\n    return allGroups;\r\n}\r\n\r\nconst sumYesGroups = (input) => {\r\n    const groups = allGroups(input);\r\n    let sumYes = 0;\r\n    groups.map(({group}) => {\r\n        const uniqueAnswers = countUniqueChars(group).length\r\n        return sumYes += uniqueAnswers;\r\n    })\r\n    return sumYes\r\n}\r\n\r\nconst sumEveryoneYes = (input) => {\r\n    const groups = allGroups(input);\r\n    let sumEveryoneYes = 0;\r\n    groups.map(({ group, groupSize }) => {\r\n        const uniqueAnswers = countUniqueChars(group);\r\n        let groupEveryoneYes = 0\r\n        uniqueAnswers.map( (letter) => {\r\n            const count = (group.match(new RegExp(letter, \"g\")) || []).length;\r\n            return count === groupSize ? groupEveryoneYes++ : 0;\r\n        })\r\n        sumEveryoneYes += groupEveryoneYes;\r\n        groupEveryoneYes = 0\r\n        return groupEveryoneYes;\r\n    })\r\n    return sumEveryoneYes;\r\n}\r\n\r\nexport const resultDay6Part1 = sumYesGroups(inputDay6);\r\n\r\nexport const resultDay6Part2 = sumEveryoneYes(inputDay6);","C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\9.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\data\\9test.js",[],"C:\\inetpub\\sites\\tutorials\\cra\\adventofcode\\src\\calculations\\day9.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":42,"column":43,"nodeType":"103","messageId":"104","endLine":42,"endColumn":45},{"ruleId":"101","severity":1,"message":"105","line":6,"column":29,"nodeType":"103","messageId":"106","endLine":6,"endColumn":31},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]